CONSULTA 4.1
-> Sort: total_vendas DESC  (actual time=3683..3683 rows=3095 loops=1)
     -> Table scan on <temporary>  (actual time=3671..3672 rows=3095 loops=1)
         -> Aggregate using temporary table  (actual time=3671..3671 rows=3095 loops=1)
             -> Nested loop inner join  (cost=58560 rows=0) (actual time=1957..3419 rows=102424 loops=1)
                 -> Nested loop inner join  (cost=28770 rows=0) (actual time=1957..2945 rows=102424 loops=1)
                     -> Table scan on p  (cost=2.5..2.5 rows=0) (actual time=1957..2032 rows=99440 loops=1)
                         -> Materialize  (cost=0..0 rows=0) (actual time=1957..1957 rows=99440 loops=1)
                             -> Table scan on <temporary>  (actual time=1807..1851 rows=99440 loops=1)
                                 -> Aggregate using temporary table  (actual time=1807..1807 rows=99439 loops=1)
                                     -> Nested loop inner join  (cost=52906 rows=115071) (actual time=0.394..667 rows=115986 loops=1)
                                         -> Filter: (op.order_id is not null)  (cost=12631 rows=115071) (actual time=0.335..115 rows=115986 loops=1)
                                             -> Covering index scan on op using idx_order_payment_value  (cost=12631 rows=115071) (actual time=0.332..97.9 rows=115986 loops=1)
                                         -> Filter: (o.order_id = op.order_id)  (cost=0.25 rows=1) (actual time=0.0043..0.00446 rows=1 loops=115986)
                                             -> Single-row covering index lookup on o using PRIMARY (order_id=op.order_id)  (cost=0.25 rows=1) (actual time=0.00345..0.00351 rows=1 loops=115986)
                     -> Filter: ((oi.order_id = p.order_id) and (oi.seller_id is not null))  (cost=0.25 rows=1.04) (actual time=0.00702..0.00879 rows=1.03 loops=99440)
                         -> Index lookup on oi using PRIMARY (order_id=p.order_id)  (cost=0.25 rows=1.04) (actual time=0.00604..0.00769 rows=1.03 loops=99440)
                 -> Single-row covering index lookup on s using PRIMARY (seller_id=oi.seller_id)  (cost=0.25 rows=1) (actual time=0.00418..0.00424 rows=1 loops=102424)
 

CONSULTA 4.2
-> Limit: 10 row(s)  (actual time=524..524 rows=10 loops=1)
     -> Sort: total_gasto DESC, limit input to 10 row(s) per chunk  (actual time=524..524 rows=10 loops=1)
         -> Table scan on <temporary>  (actual time=509..513 rows=14611 loops=1)
             -> Aggregate using temporary table  (actual time=509..509 rows=14611 loops=1)
                 -> Nested loop inner join  (cost=54840 rows=33323) (actual time=3.41..428 rows=17351 loops=1)
                     -> Nested loop inner join  (cost=22832 rows=28540) (actual time=3.38..221 rows=14611 loops=1)
                         -> Filter: (o.customer_id is not null)  (cost=12843 rows=28540) (actual time=3.35..113 rows=14611 loops=1)
                             -> Index range scan on o using idx_order_date over ('2017-01-01 00:00:00' <= order_purchase_timestamp < '2017-07-01 00:00:00'), with index condition: ((o.order_purchase_timestamp >= TIMESTAMP'2017-01-01 00:00:00') and (o.order_purchase_timestamp < TIMESTAMP'2017-07-01 00:00:00'))  (cost=12843 rows=28540) (actual time=3.35..110 rows=14611 loops=1)
                         -> Single-row covering index lookup on c using PRIMARY (customer_id=o.customer_id)  (cost=0.25 rows=1) (actual time=0.00676..0.00685 rows=1 loops=14611)
                     -> Filter: (o.order_id = op.order_id)  (cost=1 rows=1.17) (actual time=0.0101..0.0133 rows=1.19 loops=14611)
                         -> Covering index lookup on op using idx_order_payment_value (order_id=o.order_id)  (cost=1 rows=1.17) (actual time=0.00869..0.0115 rows=1.19 loops=14611)
 

CONSULTA 4.3
-> Sort: media_avaliacao DESC  (actual time=3647..3648 rows=3095 loops=1)
     -> Stream results  (cost=314 rows=3095) (actual time=6.86..3637 rows=3095 loops=1)
         -> Covering index scan on s using fk_seller_geo_location  (cost=314 rows=3095) (actual time=6.24..27.3 rows=3095 loops=1)
 -> Select #2 (subquery in projection; dependent)
     -> Aggregate: avg(orw.review_score)  (cost=40.1 rows=1) (actual time=1.16..1.16 rows=1 loops=3095)
         -> Nested loop inner join  (cost=37.2 rows=29.6) (actual time=0.142..1.11 rows=33 loops=3095)
             -> Covering index lookup on oi using fk_order_item_seller (seller_id=s.seller_id)  (cost=4.62 rows=29.6) (actual time=0.114..0.301 rows=33.1 loops=3095)
             -> Index lookup on orw using fk_order_review_order (order_id=oi.order_id)  (cost=1 rows=1) (actual time=0.0211..0.0237 rows=0.998 loops=102425)
 

CONSULTA 4.4
-> Nested loop inner join  (cost=82799 rows=57536) (actual time=3.83..1353 rows=53080 loops=1)
     -> Nested loop inner join  (cost=52906 rows=57536) (actual time=0.264..910 rows=53080 loops=1)
         -> Filter: (op.order_id is not null)  (cost=12631 rows=115071) (actual time=0.231..140 rows=115986 loops=1)
             -> Covering index scan on op using idx_order_payment_value  (cost=12631 rows=115071) (actual time=0.229..120 rows=115986 loops=1)
         -> Filter: ((o.order_purchase_timestamp >= TIMESTAMP'2017-01-01 00:00:00') and (o.order_purchase_timestamp < TIMESTAMP'2018-01-01 00:00:00') and (o.order_id = op.order_id) and (o.customer_id is not null))  (cost=0.25 rows=0.5) (actual time=0.00615..0.00625 rows=0.458 loops=115986)
             -> Single-row index lookup on o using PRIMARY (order_id=op.order_id)  (cost=0.25 rows=1) (actual time=0.00485..0.00491 rows=1 loops=115986)
     -> Single-row covering index lookup on c using PRIMARY (customer_id=o.customer_id)  (cost=0.42 rows=1) (actual time=0.0078..0.00785 rows=1 loops=53080)
 

CONSULTA 4.5
-> Limit: 5 row(s)  (actual time=1359..1359 rows=5 loops=1)
     -> Sort: total_vendas DESC, limit input to 5 row(s) per chunk  (actual time=1359..1359 rows=5 loops=1)
         -> Table scan on <temporary>  (actual time=1344..1352 rows=32787 loops=1)
             -> Aggregate using temporary table  (actual time=1344..1344 rows=32787 loops=1)
                 -> Nested loop inner join  (cost=28171 rows=51130) (actual time=0.294..1113 rows=102093 loops=1)
                     -> Filter: ((o.order_purchase_timestamp >= TIMESTAMP'2017-01-01 00:00:00') and (o.order_purchase_timestamp < TIMESTAMP'2023-07-01 00:00:00'))  (cost=10685 rows=49375) (actual time=0.254..217 rows=99112 loops=1)
                         -> Covering index range scan on o using idx_order_date over ('2017-01-01 00:00:00' <= order_purchase_timestamp < '2023-07-01 00:00:00')  (cost=10685 rows=49375) (actual time=0.25..181 rows=99112 loops=1)
                     -> Filter: (oi.order_id = o.order_id)  (cost=0.251 rows=1.04) (actual time=0.00703..0.00862 rows=1.03 loops=99112)
                         -> Covering index lookup on oi using PRIMARY (order_id=o.order_id)  (cost=0.251 rows=1.04) (actual time=0.00619..0.00767 rows=1.03 loops=99112)
 

CONSULTA 4.6
-> Limit: 10 row(s)  (cost=10076 rows=10) (actual time=126..126 rows=10 loops=1)
     -> Sort: atraso_dias DESC, limit input to 10 row(s) per chunk  (cost=10076 rows=98750) (actual time=126..126 rows=10 loops=1)
         -> Filter: (o.order_delivered_customer_date > o.order_estimated_delivery_date)  (cost=10076 rows=98750) (actual time=0.314..120 rows=7827 loops=1)
             -> Table scan on o  (cost=10076 rows=98750) (actual time=0.301..101 rows=99441 loops=1)
 

CONSULTA 4.7
-> Limit: 10 row(s)  (actual time=2354..2354 rows=10 loops=1)
     -> Sort: total_gasto DESC, limit input to 10 row(s) per chunk  (actual time=2354..2354 rows=10 loops=1)
         -> Table scan on <temporary>  (actual time=2237..2302 rows=99440 loops=1)
             -> Aggregate using temporary table  (actual time=2237..2237 rows=99439 loops=1)
                 -> Nested loop inner join  (cost=52906 rows=115071) (actual time=0.29..847 rows=115986 loops=1)
                     -> Filter: (op.order_id is not null)  (cost=12631 rows=115071) (actual time=0.259..152 rows=115986 loops=1)
                         -> Covering index scan on op using idx_order_payment_value  (cost=12631 rows=115071) (actual time=0.258..128 rows=115986 loops=1)
                     -> Filter: (o.order_id = op.order_id)  (cost=0.25 rows=1) (actual time=0.00543..0.00562 rows=1 loops=115986)
                         -> Single-row index lookup on o using PRIMARY (order_id=op.order_id)  (cost=0.25 rows=1) (actual time=0.00428..0.00436 rows=1 loops=115986)
 

CONSULTA 4.8
-> Sort: media_tempo_entrega DESC  (actual time=750..750 rows=27 loops=1)
     -> Table scan on <temporary>  (actual time=750..750 rows=27 loops=1)
         -> Aggregate using temporary table  (actual time=750..750 rows=27 loops=1)
             -> Nested loop inner join  (cost=27357 rows=49375) (actual time=0.542..568 rows=96476 loops=1)
                 -> Filter: ((o.order_delivered_customer_date is not null) and (o.customer_id is not null))  (cost=10076 rows=49375) (actual time=0.499..125 rows=96476 loops=1)
                     -> Table scan on o  (cost=10076 rows=98750) (actual time=0.494..106 rows=99441 loops=1)
                 -> Single-row index lookup on c using PRIMARY (customer_id=o.customer_id)  (cost=0.25 rows=1) (actual time=0.00417..0.00424 rows=1 loops=96476)
 